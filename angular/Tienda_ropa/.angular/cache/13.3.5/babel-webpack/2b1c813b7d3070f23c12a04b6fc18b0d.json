{"ast":null,"code":"import { isPlatformServer, isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, forwardRef, Component, Inject, Input, Output, Directive, Host, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n/**\n * Slick component\n */\n\nconst _c0 = [\"*\"];\n\nclass SlickCarouselComponent {\n  /**\n   * Constructor\n   */\n  constructor(el, zone, platformId) {\n    this.el = el;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.afterChange = new EventEmitter();\n    this.beforeChange = new EventEmitter();\n    this.breakpoint = new EventEmitter();\n    this.destroy = new EventEmitter();\n    this.init = new EventEmitter(); // access from parent component can be a problem with change detection timing. Please use afterChange output\n\n    this.currentIndex = 0;\n    this.slides = [];\n    this.initialized = false;\n    this._removedSlides = [];\n    this._addedSlides = [];\n  }\n  /**\n   * On component destroy\n   */\n\n\n  ngOnDestroy() {\n    this.unslick();\n  }\n\n  ngAfterViewInit() {\n    this.ngAfterViewChecked();\n  }\n  /**\n   * On component view checked\n   */\n\n\n  ngAfterViewChecked() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n      const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n\n      if (!this.initialized) {\n        if (nextSlidesLength > 0) {\n          this.initSlick();\n        } // if nextSlidesLength is zere, do nothing\n\n      } else if (nextSlidesLength === 0) {\n        // unslick case\n        this.unslick();\n      } else {\n        this._addedSlides.forEach(slickItem => {\n          this.slides.push(slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n          });\n        });\n\n        this._addedSlides = [];\n\n        this._removedSlides.forEach(slickItem => {\n          const idx = this.slides.indexOf(slickItem);\n          this.slides = this.slides.filter(s => s !== slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickRemove', idx);\n          });\n        });\n\n        this._removedSlides = [];\n      }\n    }\n  }\n  /**\n   * init slick\n   */\n\n\n  initSlick() {\n    this.slides = this._addedSlides;\n    this._addedSlides = [];\n    this._removedSlides = [];\n    this.zone.runOutsideAngular(() => {\n      this.$instance = jQuery(this.el.nativeElement);\n      this.$instance.on('init', (event, slick) => {\n        this.zone.run(() => {\n          this.init.emit({\n            event,\n            slick\n          });\n        });\n      });\n      this.$instance.slick(this.config);\n      this.zone.run(() => {\n        var _a;\n\n        this.initialized = true;\n        this.currentIndex = ((_a = this.config) === null || _a === void 0 ? void 0 : _a.initialSlide) || 0;\n      });\n      this.$instance.on('afterChange', (event, slick, currentSlide) => {\n        this.zone.run(() => {\n          this.afterChange.emit({\n            event,\n            slick,\n            currentSlide,\n            first: currentSlide === 0,\n            last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n          });\n          this.currentIndex = currentSlide;\n        });\n      });\n      this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n        this.zone.run(() => {\n          this.beforeChange.emit({\n            event,\n            slick,\n            currentSlide,\n            nextSlide\n          });\n          this.currentIndex = nextSlide;\n        });\n      });\n      this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n        this.zone.run(() => {\n          this.breakpoint.emit({\n            event,\n            slick,\n            breakpoint\n          });\n        });\n      });\n      this.$instance.on('destroy', (event, slick) => {\n        this.zone.run(() => {\n          this.destroy.emit({\n            event,\n            slick\n          });\n          this.initialized = false;\n        });\n      });\n    });\n  }\n\n  addSlide(slickItem) {\n    this._addedSlides.push(slickItem);\n  }\n\n  removeSlide(slickItem) {\n    this._removedSlides.push(slickItem);\n  }\n  /**\n   * Slick Method\n   */\n\n\n  slickGoTo(index) {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickGoTo', index);\n    });\n  }\n\n  slickNext() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickNext');\n    });\n  }\n\n  slickPrev() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPrev');\n    });\n  }\n\n  slickPause() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPause');\n    });\n  }\n\n  slickPlay() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPlay');\n    });\n  }\n\n  unslick() {\n    if (this.$instance) {\n      this.zone.runOutsideAngular(() => {\n        this.$instance.slick('unslick');\n      });\n      this.$instance = undefined;\n    }\n\n    this.initialized = false;\n  }\n\n  ngOnChanges(changes) {\n    if (this.initialized) {\n      const config = changes['config'];\n\n      if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n        const refresh = config.currentValue['refresh'];\n        const newOptions = Object.assign({}, config.currentValue);\n        delete newOptions['refresh'];\n        this.zone.runOutsideAngular(() => {\n          this.$instance.slick('slickSetOption', newOptions, refresh);\n        });\n      }\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nSlickCarouselComponent.ɵfac = function SlickCarouselComponent_Factory(t) {\n  return new (t || SlickCarouselComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n/** @nocollapse */\n\n\nSlickCarouselComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SlickCarouselComponent,\n  selectors: [[\"ngx-slick-carousel\"]],\n  inputs: {\n    config: \"config\"\n  },\n  outputs: {\n    afterChange: \"afterChange\",\n    beforeChange: \"beforeChange\",\n    breakpoint: \"breakpoint\",\n    destroy: \"destroy\",\n    init: \"init\"\n  },\n  exportAs: [\"slick-carousel\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SlickCarouselComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function SlickCarouselComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlickCarouselComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-slick-carousel',\n      exportAs: 'slick-carousel',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SlickCarouselComponent),\n        multi: true\n      }],\n      template: '<ng-content></ng-content>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    config: [{\n      type: Input\n    }],\n    afterChange: [{\n      type: Output\n    }],\n    beforeChange: [{\n      type: Output\n    }],\n    breakpoint: [{\n      type: Output\n    }],\n    destroy: [{\n      type: Output\n    }],\n    init: [{\n      type: Output\n    }]\n  });\n})();\n\nclass SlickItemDirective {\n  constructor(el, platformId, carousel) {\n    this.el = el;\n    this.platformId = platformId;\n    this.carousel = carousel;\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.addSlide(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.removeSlide(this);\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nSlickItemDirective.ɵfac = function SlickItemDirective_Factory(t) {\n  return new (t || SlickItemDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(SlickCarouselComponent, 1));\n};\n/** @nocollapse */\n\n\nSlickItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SlickItemDirective,\n  selectors: [[\"\", \"ngxSlickItem\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlickItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxSlickItem]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: SlickCarouselComponent,\n      decorators: [{\n        type: Host\n      }]\n    }];\n  }, null);\n})();\n\nclass SlickCarouselModule {}\n/** @nocollapse */\n\n\nSlickCarouselModule.ɵfac = function SlickCarouselModule_Factory(t) {\n  return new (t || SlickCarouselModule)();\n};\n/** @nocollapse */\n\n\nSlickCarouselModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SlickCarouselModule\n});\n/** @nocollapse */\n\nSlickCarouselModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SlickCarouselModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SlickCarouselComponent, SlickItemDirective],\n      exports: [SlickCarouselComponent, SlickItemDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective };","map":{"version":3,"sources":["C:/Users/usuario/OneDrive/Escritorio/git/proyecto-2DAW/angular/Tienda_ropa/node_modules/ngx-slick-carousel/fesm2015/ngx-slick-carousel.mjs"],"names":["isPlatformServer","isPlatformBrowser","CommonModule","i0","EventEmitter","PLATFORM_ID","forwardRef","Component","Inject","Input","Output","Directive","Host","NgModule","NG_VALUE_ACCESSOR","SlickCarouselComponent","constructor","el","zone","platformId","afterChange","beforeChange","breakpoint","destroy","init","currentIndex","slides","initialized","_removedSlides","_addedSlides","ngOnDestroy","unslick","ngAfterViewInit","ngAfterViewChecked","length","nextSlidesLength","initSlick","forEach","slickItem","push","runOutsideAngular","$instance","slick","nativeElement","idx","indexOf","filter","s","jQuery","on","event","run","emit","config","_a","initialSlide","currentSlide","first","last","$slides","options","slidesToScroll","nextSlide","addSlide","removeSlide","slickGoTo","index","slickNext","slickPrev","slickPause","slickPlay","undefined","ngOnChanges","changes","previousValue","currentValue","refresh","newOptions","Object","assign","ɵfac","ElementRef","NgZone","ɵcmp","provide","useExisting","multi","type","args","selector","exportAs","providers","template","decorators","SlickItemDirective","carousel","ngOnInit","ɵdir","SlickCarouselModule","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { isPlatformServer, isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, forwardRef, Component, Inject, Input, Output, Directive, Host, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Slick component\n */\nclass SlickCarouselComponent {\n    /**\n     * Constructor\n     */\n    constructor(el, zone, platformId) {\n        this.el = el;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.afterChange = new EventEmitter();\n        this.beforeChange = new EventEmitter();\n        this.breakpoint = new EventEmitter();\n        this.destroy = new EventEmitter();\n        this.init = new EventEmitter();\n        // access from parent component can be a problem with change detection timing. Please use afterChange output\n        this.currentIndex = 0;\n        this.slides = [];\n        this.initialized = false;\n        this._removedSlides = [];\n        this._addedSlides = [];\n    }\n    /**\n     * On component destroy\n     */\n    ngOnDestroy() {\n        this.unslick();\n    }\n    ngAfterViewInit() {\n        this.ngAfterViewChecked();\n    }\n    /**\n     * On component view checked\n     */\n    ngAfterViewChecked() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n            const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n            if (!this.initialized) {\n                if (nextSlidesLength > 0) {\n                    this.initSlick();\n                }\n                // if nextSlidesLength is zere, do nothing\n            }\n            else if (nextSlidesLength === 0) { // unslick case\n                this.unslick();\n            }\n            else {\n                this._addedSlides.forEach(slickItem => {\n                    this.slides.push(slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n                    });\n                });\n                this._addedSlides = [];\n                this._removedSlides.forEach(slickItem => {\n                    const idx = this.slides.indexOf(slickItem);\n                    this.slides = this.slides.filter(s => s !== slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickRemove', idx);\n                    });\n                });\n                this._removedSlides = [];\n            }\n        }\n    }\n    /**\n     * init slick\n     */\n    initSlick() {\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular(() => {\n            this.$instance = jQuery(this.el.nativeElement);\n            this.$instance.on('init', (event, slick) => {\n                this.zone.run(() => {\n                    this.init.emit({ event, slick });\n                });\n            });\n            this.$instance.slick(this.config);\n            this.zone.run(() => {\n                var _a;\n                this.initialized = true;\n                this.currentIndex = ((_a = this.config) === null || _a === void 0 ? void 0 : _a.initialSlide) || 0;\n            });\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({\n                        event,\n                        slick,\n                        currentSlide,\n                        first: currentSlide === 0,\n                        last: slick.$slides.length === currentSlide + slick.options.slidesToScroll\n                    });\n                    this.currentIndex = currentSlide;\n                });\n            });\n            this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n                this.zone.run(() => {\n                    this.beforeChange.emit({ event, slick, currentSlide, nextSlide });\n                    this.currentIndex = nextSlide;\n                });\n            });\n            this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n                this.zone.run(() => {\n                    this.breakpoint.emit({ event, slick, breakpoint });\n                });\n            });\n            this.$instance.on('destroy', (event, slick) => {\n                this.zone.run(() => {\n                    this.destroy.emit({ event, slick });\n                    this.initialized = false;\n                });\n            });\n        });\n    }\n    addSlide(slickItem) {\n        this._addedSlides.push(slickItem);\n    }\n    removeSlide(slickItem) {\n        this._removedSlides.push(slickItem);\n    }\n    /**\n     * Slick Method\n     */\n    slickGoTo(index) {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickGoTo', index);\n        });\n    }\n    slickNext() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickNext');\n        });\n    }\n    slickPrev() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPrev');\n        });\n    }\n    slickPause() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPause');\n        });\n    }\n    slickPlay() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPlay');\n        });\n    }\n    unslick() {\n        if (this.$instance) {\n            this.zone.runOutsideAngular(() => {\n                this.$instance.slick('unslick');\n            });\n            this.$instance = undefined;\n        }\n        this.initialized = false;\n    }\n    ngOnChanges(changes) {\n        if (this.initialized) {\n            const config = changes['config'];\n            if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n                const refresh = config.currentValue['refresh'];\n                const newOptions = Object.assign({}, config.currentValue);\n                delete newOptions['refresh'];\n                this.zone.runOutsideAngular(() => {\n                    this.$instance.slick('slickSetOption', newOptions, refresh);\n                });\n            }\n        }\n    }\n}\n/** @nocollapse */ SlickCarouselComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickCarouselComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ SlickCarouselComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.2\", type: SlickCarouselComponent, selector: \"ngx-slick-carousel\", inputs: { config: \"config\" }, outputs: { afterChange: \"afterChange\", beforeChange: \"beforeChange\", breakpoint: \"breakpoint\", destroy: \"destroy\", init: \"init\" }, providers: [{\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef((() => SlickCarouselComponent)),\n            multi: true\n        }], exportAs: [\"slick-carousel\"], usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickCarouselComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-slick-carousel',\n                    exportAs: 'slick-carousel',\n                    providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((() => SlickCarouselComponent)),\n                            multi: true\n                        }],\n                    template: '<ng-content></ng-content>',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { config: [{\n                type: Input\n            }], afterChange: [{\n                type: Output\n            }], beforeChange: [{\n                type: Output\n            }], breakpoint: [{\n                type: Output\n            }], destroy: [{\n                type: Output\n            }], init: [{\n                type: Output\n            }] } });\nclass SlickItemDirective {\n    constructor(el, platformId, carousel) {\n        this.el = el;\n        this.platformId = platformId;\n        this.carousel = carousel;\n    }\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.addSlide(this);\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.removeSlide(this);\n        }\n    }\n}\n/** @nocollapse */ SlickItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickItemDirective, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }, { token: SlickCarouselComponent, host: true }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ SlickItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.2\", type: SlickItemDirective, selector: \"[ngxSlickItem]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickItemDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxSlickItem]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: SlickCarouselComponent, decorators: [{\n                        type: Host\n                    }] }];\n    } });\n\nclass SlickCarouselModule {\n}\n/** @nocollapse */ SlickCarouselModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ SlickCarouselModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickCarouselModule, declarations: [SlickCarouselComponent,\n        SlickItemDirective], imports: [CommonModule], exports: [SlickCarouselComponent,\n        SlickItemDirective] });\n/** @nocollapse */ SlickCarouselModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickCarouselModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.2\", ngImport: i0, type: SlickCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        SlickCarouselComponent,\n                        SlickItemDirective,\n                    ],\n                    exports: [\n                        SlickCarouselComponent,\n                        SlickItemDirective,\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective };\n"]},"metadata":{},"sourceType":"module"}